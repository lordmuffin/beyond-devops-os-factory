name: Build Kairos Images

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'packer/kairos.pkr.hcl'
      - 'packer/kairos/**'
      - 'scripts/kairos/**'
      - '.github/workflows/build-kairos.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'packer/kairos.pkr.hcl'
      - 'packer/kairos/**'
      - 'scripts/kairos/**'
      - '.github/workflows/build-kairos.yml'
  workflow_dispatch:
    inputs:
      kairos_version:
        description: 'Kairos version to build'
        required: false
        default: 'v3.2.0'
        type: string
      build_iso:
        description: 'Build bootable ISO (requires KVM)'
        required: false
        default: false
        type: boolean

env:
  KAIROS_VERSION: ${{ inputs.kairos_version || 'v3.2.0' }}
  PACKER_VERSION: '1.10.1'

jobs:
  # Validate Packer configuration
  validate:
    name: Validate Packer Configuration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: ${{ env.PACKER_VERSION }}

      - name: Validate Packer template
        run: |
          cd packer
          packer validate kairos.pkr.hcl

      - name: Format check Packer template
        run: |
          cd packer
          packer fmt -check kairos.pkr.hcl

  # Build custom Kairos container image
  build-container:
    name: Build Kairos Container Image
    runs-on: ubuntu-latest
    needs: validate
    strategy:
      matrix:
        base_distribution: ['ubuntu-24.04']
        k8s_distribution: ['k3s']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: ${{ env.PACKER_VERSION }}

      - name: Initialize Packer
        run: |
          cd packer
          packer init kairos.pkr.hcl

      - name: Build custom Kairos container image
        run: |
          cd packer
          packer build \
            -only='kairos-container-build' \
            -var="base_distribution=${{ matrix.base_distribution }}" \
            -var="k8s_distribution=${{ matrix.k8s_distribution }}" \
            -var="kairos_version=${{ env.KAIROS_VERSION }}" \
            kairos.pkr.hcl

      - name: Export container image
        run: |
          docker save custom-kairos-base:latest | gzip > kairos-container-${{ matrix.base_distribution }}-${{ matrix.k8s_distribution }}.tar.gz

      - name: Run security scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'custom-kairos-base:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Upload container image artifact
        uses: actions/upload-artifact@v4
        with:
          name: kairos-container-${{ matrix.base_distribution }}-${{ matrix.k8s_distribution }}
          path: kairos-container-*.tar.gz
          retention-days: 30

  # Build bootable ISO (only on workflow_dispatch with iso flag or main branch)
  build-iso:
    name: Build Kairos Bootable ISO
    runs-on: ubuntu-latest
    needs: [validate, build-container]
    if: ${{ (github.event_name == 'workflow_dispatch' && inputs.build_iso) || (github.ref == 'refs/heads/main' && github.event_name == 'push') }}
    strategy:
      matrix:
        base_distribution: ['ubuntu-24.04']
        k8s_distribution: ['k3s']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64

      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: ${{ env.PACKER_VERSION }}

      - name: Download container image artifact
        uses: actions/download-artifact@v4
        with:
          name: kairos-container-${{ matrix.base_distribution }}-${{ matrix.k8s_distribution }}

      - name: Load container image
        run: |
          gunzip -c kairos-container-*.tar.gz | docker load

      - name: Initialize Packer
        run: |
          cd packer
          packer init kairos.pkr.hcl

      - name: Build Kairos bootable ISO
        run: |
          cd packer
          packer build \
            -only='kairos-iso-build' \
            -var="base_distribution=${{ matrix.base_distribution }}" \
            -var="k8s_distribution=${{ matrix.k8s_distribution }}" \
            -var="kairos_version=${{ env.KAIROS_VERSION }}" \
            -var="memory=4096" \
            -var="cpus=4" \
            kairos.pkr.hcl

      - name: Upload ISO artifact
        uses: actions/upload-artifact@v4
        with:
          name: kairos-iso-${{ matrix.base_distribution }}-${{ matrix.k8s_distribution }}
          path: packer/output-kairos/*
          retention-days: 30

  # Create release on main branch
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-container, build-iso]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Generate release tag
        id: tag
        run: |
          TAG="kairos-${{ env.KAIROS_VERSION }}-$(date +'%Y%m%d-%H%M%S')"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: Kairos Images ${{ steps.tag.outputs.tag }}
          body: |
            ## Kairos Custom Images Release
            
            This release contains custom Kairos images built with enterprise configuration:
            
            ### Images Included:
            - **Container Images**: Custom Kairos base images
            - **Bootable ISOs**: Ready-to-deploy Kairos ISO images
            
            ### Configuration:
            - Kairos Version: ${{ env.KAIROS_VERSION }}
            - Base Distribution: Ubuntu 24.04
            - Kubernetes: K3s with HA configuration
            - Enterprise Features: Enabled
            
            ### Security:
            - All images have been scanned with Trivy
            - Security hardening applied
            - Enterprise compliance markers included
            
            Built from commit: ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts
          asset_name: kairos-images-${{ steps.tag.outputs.tag }}
          asset_content_type: application/zip